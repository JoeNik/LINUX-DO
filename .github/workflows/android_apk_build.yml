name: Build Android
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.27.2'
      - name: Accept Android SDK licenses
        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
      - name: Install Android platform 33
        run: $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-33"
      - name: Configure build.gradle for app
        run: |
          sed -i 's/minSdkVersion .*/minSdkVersion 21/' android/app/build.gradle
          sed -i 's/targetSdkVersion .*/targetSdkVersion 33/' android/app/build.gradle
      - name: Get dependencies
        run: flutter pub get
      - name: Find and fix image_gallery_saver
        run: |
          echo "正在查找image_gallery_saver插件..."
          # 列出pub缓存目录
          ls -la $HOME/.pub-cache/hosted/ || echo "Hosted目录不存在"
          
          # 创建修复脚本
          cat > fix_namespace.sh << 'EOF'
          #!/bin/bash
          for DIR in $(find $HOME/.pub-cache -type d -name "image_gallery_saver-*" 2>/dev/null); do
            echo "检查目录: $DIR"
            BUILD_GRADLE="$DIR/android/build.gradle"
            if [ -f "$BUILD_GRADLE" ]; then
              echo "找到构建文件: $BUILD_GRADLE"
              if ! grep -q "namespace" "$BUILD_GRADLE"; then
                echo "添加namespace到: $BUILD_GRADLE"
                sed -i '/android {/a \\    namespace "com.example.image_gallery_saver"' "$BUILD_GRADLE"
                echo "修复完成!"
              else
                echo "已存在namespace配置，无需修改"
              fi
            fi
          done
          EOF
          
          # 赋予执行权限
          chmod +x fix_namespace.sh
          
          # 执行修复脚本
          ./fix_namespace.sh
          
          # 直接修改所有可能的目录
          echo "尝试直接修改可能的路径..."
          for PROVIDER in pub.dev pub.dartlang.org; do
            DIR="$HOME/.pub-cache/hosted/$PROVIDER"
            if [ -d "$DIR" ]; then
              echo "检查提供商: $PROVIDER"
              for PLUGIN in $(find "$DIR" -type d -name "image_gallery_saver-*" 2>/dev/null); do
                BUILD_GRADLE="$PLUGIN/android/build.gradle"
                if [ -f "$BUILD_GRADLE" ]; then
                  echo "尝试修复: $BUILD_GRADLE"
                  if ! grep -q "namespace" "$BUILD_GRADLE"; then
                    echo "添加namespace到文件末尾"
                    echo 'android { namespace "com.example.image_gallery_saver" }' >> "$BUILD_GRADLE"
                  fi
                fi
              done
            fi
          done
      - name: Run code generation
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Build APK
        run: flutter build apk --release --split-per-abi
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-apk
          path: build/app/outputs/apk/release/*
