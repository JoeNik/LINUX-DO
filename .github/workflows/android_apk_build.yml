name: Build Android
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.27.2'
      - name: Accept Android SDK licenses
        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
      - name: Install Android platform 33
        run: $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-33"
      - name: Configure build.gradle for app
        run: |
          sed -i 's/minSdkVersion .*/minSdkVersion 21/' android/app/build.gradle
          sed -i 's/targetSdkVersion .*/targetSdkVersion 33/' android/app/build.gradle
      - name: Get dependencies
        run: flutter pub get
      - name: Fix image_gallery_saver namespace issue
        run: |
          # 找到image_gallery_saver目录
          PLUGIN_DIR="$HOME/.pub-cache/hosted/pub.dev/image_gallery_saver-2.0.3"
          echo "插件目录: $PLUGIN_DIR"
          
          # 确认文件存在
          MANIFEST_FILE="$PLUGIN_DIR/android/src/main/AndroidManifest.xml"
          BUILD_GRADLE="$PLUGIN_DIR/android/build.gradle"
          
          if [ ! -f "$MANIFEST_FILE" ]; then
            echo "错误: AndroidManifest.xml 文件不存在!"
            exit 1
          fi
          
          if [ ! -f "$BUILD_GRADLE" ]; then
            echo "错误: build.gradle 文件不存在!"
            exit 1
          fi
          
          echo "找到AndroidManifest.xml: $MANIFEST_FILE"
          echo "找到build.gradle: $BUILD_GRADLE"
          
          # 备份原始文件
          cp "$MANIFEST_FILE" "${MANIFEST_FILE}.bak"
          cp "$BUILD_GRADLE" "${BUILD_GRADLE}.bak"
          
          # 从AndroidManifest.xml中提取package值，以防万一
          PACKAGE_VALUE=$(grep -o 'package="[^"]*"' "$MANIFEST_FILE" | cut -d'"' -f2)
          echo "提取的package值: $PACKAGE_VALUE"
          
          # 如果提取失败，使用错误消息中显示的值
          if [ -z "$PACKAGE_VALUE" ]; then
            PACKAGE_VALUE="com.example.imagegallerysaver"
            echo "使用默认package值: $PACKAGE_VALUE"
          fi
          
          # 从AndroidManifest.xml中移除package属性
          echo "从AndroidManifest.xml中移除package属性..."
          sed -i 's/package="[^"]*"//g' "$MANIFEST_FILE"
          
          # 在build.gradle中添加namespace
          echo "在build.gradle中添加namespace..."
          if grep -q "namespace" "$BUILD_GRADLE"; then
            echo "build.gradle已包含namespace配置，更新其值..."
            sed -i "s/namespace .*$/namespace \"$PACKAGE_VALUE\"/" "$BUILD_GRADLE"
          elif grep -q "android {" "$BUILD_GRADLE"; then
            echo "在android块中添加namespace..."
            sed -i "/android {/a \\    namespace \"$PACKAGE_VALUE\"" "$BUILD_GRADLE"
          else
            echo "添加完整的android块到build.gradle..."
            echo "
android {
    namespace \"$PACKAGE_VALUE\"
    compileSdkVersion 33
}" >> "$BUILD_GRADLE"
          fi
          
          echo "修改后的AndroidManifest.xml内容:"
          cat "$MANIFEST_FILE"
          
          echo "修改后的build.gradle内容:"
          cat "$BUILD_GRADLE"
      - name: Run code generation
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Build APK
        run: flutter build apk --release --split-per-abi
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-apk
          path: build/app/outputs/apk/release/*
